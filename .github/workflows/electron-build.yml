name: Electron Build

on:
  push:
    branches:
      - main

jobs:
  build_backend:
    runs-on: windows-latest
    steps:
      - name: Check out backend repo
        uses: actions/checkout@v3
        with:
          repository: yx179971/ursa-backend
          ref: 'main'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: pack backend
        run: pyinstaller ursa.exe.spec

      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: ./dist/Ursa.exe

  build_frontend:
    needs: build_backend
    runs-on: ubuntu-22.04

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install wine
        run: |
          sudo dpkg --add-architecture i386
          sudo mkdir -pm755 /etc/apt/keyrings
          sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
          sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources
          sudo apt update
          sudo apt install libgcc-s1:i386 libstdc++6:i386
          sudo apt install wine-stable-i386
          sudo apt install wine-stable
          sudo apt install --install-recommends winehq-stable

      - name: Install dependencies
        run: npm install

      - name: Build Vue app
        run: npm run build

      - name: Package Electron app
        run: |
          npm install electron-packager -g
          cp main.js package.json preload.js renderer.js ./dist
          cd ./dist
          electron-packager . Ursa-frontend --electron-version=24.3.0 --platform=win32 --arch=x64 --out=dist --overwrite --html=index.html

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.1.6
          release_name: Release v1.1.6
          draft: false
          prerelease: false

      - uses: actions/download-artifact@v2
        with:
          name: my-artifact

      - name: tar
        run: |
          mv Ursa.exe ./dist/dist/Ursa-frontend-win32-x64/
          tar -C ./dist/dist/ -cvzf Ursa-win32-x64.tar Ursa-frontend-win32-x64 --strip 1

      - name: Upload release assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Ursa-win32-x64.tar
          asset_name: Ursa.rar
          asset_content_type: application/zip
